# This config file should provide the necessary arguments to build inertia_balls_saae_set_pl model.
# Therefore it should have the following:
#         - configs for a slot-attention autoencoder (either to be created 
#           from scratch or to be loaded from a ckpt.)
#         - configs for a projection layer from slot repr to matching's target dimension
#
#


_target_: src.models.inertia_balls_saae_set_pl.InertiaBallsSlotAttentionAESet

defaults:
  - scheduler_config: polynomial # options: reduce_on_plateau, linear, polynomial
  - optimizer: adamw # options: adamw, adam
  - encoder: slot_attention_autoencoder # options: resnet18_encoder, difference_model, slot_attention_autoencoder
  - additional_logger: reconstruction_logger


# model_name_or_path: ${work_dir}/models/

# set this to null to train from scratch
encoder_ckpt_path: "/home/user/OC-CRL/slot_attention_autoencoder.ckpt"
encoder_freeze: True

n_balls: ${datamodule.n_balls}
n_latents: ${mult_int:2,${model.n_balls}}

logging_name: "slot_attention_inertia_balls_ae_set"

# if the matching is based on colors, this should be 3, if it's based on CoM, then it should be 2, and so on
target_dim: 3

projection_module:
  fc1:
    _target_: torch.nn.Linear
    in_features: ${model.encoder.slot_size} # 32
    out_features: ${mult:${model.encoder.slot_size}, 0.5} # 32 * 0.5
    bias: False

  fc1_nonlinearity:
    _target_: torch.nn.ReLU 

  fc2:
    _target_: torch.nn.Linear
    in_features: ${model.projection_module.fc1.out_features} # 16
    out_features: ${mult:${model.projection_module.fc1.out_features}, 0.5} # 16 * 0.5
    bias: False

  fc2_nonlinearity:
    _target_: torch.nn.ReLU 
  
  fc3:
    _target_: torch.nn.Linear
    in_features: ${model.projection_module.fc2.out_features}
    out_features: ${model.target_dim} # 3
    bias: False

  fc3_nonlinearity:
    _target_: torch.nn.Sigmoid 
